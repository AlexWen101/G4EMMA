<map id="c2_function&lt; float_type &gt;" name="c2_function&lt; float_type &gt;">
<area shape="rect" id="node2" href="$classc2__binary__function.html" title="Provides support for c2_function objects which are constructed from two other c2_function objects..." alt="" coords="341,1077,516,1257"/>
<area shape="rect" id="node8" href="$classc2__cached__function__p.html" title="A container into which any other c2_function can be dropped.It allows a function to be pre&#45;evaluated ..." alt="" coords="540,1069,715,1264"/>
<area shape="rect" id="node9" href="$classc2__classic__function__p.html" title="a container into which any conventional c&#45;style function can be dropped, to create a degenerate c2_fu..." alt="" coords="739,1106,918,1227"/>
<area shape="rect" id="node10" href="$classc2__connector__function__p.html" title="create a c2_function which smoothly connects two other c2_functions.This takes two points and generat..." alt="" coords="942,1033,1137,1301"/>
<area shape="rect" id="node11" href="$classc2__constant__p.html" title="a c2_function which is constantThe factory function c2_factory::constant() creates *new c2_constant_p..." alt="" coords="1161,1106,1336,1227"/>
<area shape="rect" id="node12" href="$classc2__exp__p.html" title="compute exp(x) with its derivatives.The factory function c2_factory::exp() creates *new c2_exp_p ..." alt="" coords="1360,1121,1535,1213"/>
<area shape="rect" id="node13" href="$classc2__identity__p.html" title="compute x with its derivatives.The factory function c2_factory::identity() creates *new c2_identity_p..." alt="" coords="1559,1113,1733,1220"/>
<area shape="rect" id="node14" href="$classc2__inverse__function__p.html" title="create the formal inverse function of another functionfor example, given a c2_function f ..." alt="" coords="1757,1062,1932,1271"/>
<area shape="rect" id="node15" href="$classc2__linear__p.html" title="create a linear mapping of another functionfor example, given a c2_function f " alt="" coords="1956,1099,2131,1235"/>
<area shape="rect" id="node17" href="$classc2__log__p.html" title="compute log(x) with its derivatives.The factory function c2_factory::log() creates *new c2_log_p ..." alt="" coords="2581,1121,2756,1213"/>
<area shape="rect" id="node18" href="$classc2__piecewise__function__p.html" title="create a c2_function which is a piecewise assembly of other c2_functions.The functions must have incr..." alt="" coords="2780,1091,2976,1242"/>
<area shape="rect" id="node19" href="$classc2__plugin__function__p.html" title="a container into which any other c2_function can be dropped, to allow expressions with replacable com..." alt="" coords="2383,1077,2557,1257"/>
<area shape="rect" id="node23" href="$classc2__power__law__p.html" title="create a power law mapping of another functionfor example, given a c2_function f " alt="" coords="3000,1099,3175,1235"/>
<area shape="rect" id="node24" href="$classc2__quadratic__p.html" title="create a quadratic mapping of another functionfor example, given a c2_function f " alt="" coords="3199,1099,3373,1235"/>
<area shape="rect" id="node25" href="$classc2__recip__p.html" title="compute scale/x with its derivatives.The factory function c2_factory::recip() creates *new c2_recip_p..." alt="" coords="3397,1113,3572,1220"/>
<area shape="rect" id="node26" href="$classc2__scaled__function__p.html" title="Create a very lightweight method to return a scalar multiple of another function. \ \The factory func..." alt="" coords="3596,1091,3771,1242"/>
<area shape="rect" id="node27" href="$classc2__sin__p.html" title="compute sin(x) with its derivatives.The factory function c2_factory::sin() creates *new c2_sin_p ..." alt="" coords="3795,1113,3969,1220"/>
<area shape="rect" id="node29" href="$classc2__sqrt__p.html" title="compute sqrt(x) with its derivatives.The factory function c2_factory::sqrt() creates *new c2_sqrt_p()..." alt="" coords="3993,1121,4168,1213"/>
<area shape="rect" id="node30" href="$classc2__tan__p.html" title="compute tan(x) with its derivatives.The factory function c2_factory::tan() creates *new c2_tan_p ..." alt="" coords="4192,1121,4367,1213"/>
<area shape="rect" id="node31" href="$classinterpolating__function__p.html" title="create a cubic spline interpolation of a set of (x,y) pairsThis is one of the main reasons for c2_fun..." alt="" coords="4391,901,4599,1433"/>
<area shape="rect" id="node37" href="$classc2__function.html" title="{c2_function\&lt; G4double \&gt;\n|# sampling_grid\l# no_overwrite_grid\l# fXMin\l# fXMax\l# evaluations\l# bad_x_point\l|+ cvs_header_vers()\l+ cvs_file_vers()\l+ ~c2_function()\l+ value_with_derivatives()\l+ operator()()\l+ operator()()\l+ operator()()\l+ find_root()\l+ partial_integrals()\l+ integral()\l+ adaptively_sample()\l+ xmin()\l+ xmax()\l+ set_domain()\l+ get_evaluations()\l+ reset_evaluations()\l+ increment_evaluations()\l+ check_monotonicity()\l+ set_sampling_grid()\l+ get_sampling_grid_pointer()\l+ get_sampling_grid()\l+ preen_sampling_grid()\l+ refine_sampling_grid()\l+ normalized_function()\l+ square_normalized_function()\l+ square_normalized_function()\l+ operator+()\l+ operator&#45;()\l+ operator*()\l+ operator/()\l+ get_trouble_point()\l+ claim_ownership()\l+ release_ownership_for\l_return()\l+ release_ownership()\l+ count_owners()\l+ fill_fblock()\l# c2_function()\l# c2_function()\l# set_sampling_grid_pointer()\l}" alt="" coords="2155,805,2359,1528"/>
<area shape="rect" id="node3" href="$classc2__composed__function__p.html" title="Provides function composition (nesting)This allows evaluation of f(g(x)) where f and g are c2_functio..." alt="" coords="721,1620,912,1741"/>
<area shape="rect" id="node4" href="$classc2__diff__p.html" title="create a c2_function which is the difference of two other c2_functions.This should always be construc..." alt="" coords="5,1627,161,1734"/>
<area shape="rect" id="node5" href="$classc2__product__p.html" title="create a c2_function which is the product of two other c2_functions.This should always be constructed..." alt="" coords="185,1620,323,1741"/>
<area shape="rect" id="node6" href="$classc2__ratio__p.html" title="create a c2_function which is the ratio of two other c2_functions.This should always be constructed u..." alt="" coords="347,1627,510,1734"/>
<area shape="rect" id="node7" href="$classc2__sum__p.html" title="create a c2_function which is the sum of two other c2_function objects.This should always be construc..." alt="" coords="534,1627,697,1734"/>
<area shape="rect" id="node16" href="$classc2__linear__p.html" title="{c2_linear_p\&lt; G4double \&gt;\n||+ c2_linear_p()\l+ reset()\l+ value_with_derivatives()\l# c2_linear_p()\l}" alt="" coords="1964,1620,2139,1741"/>
<area shape="rect" id="node20" href="$classc2__const__plugin__function__p.html" title="a c2_plugin_function_p which promises not to fiddle with the plugged function.The factory function c2..." alt="" coords="2369,1605,2579,1756"/>
<area shape="rect" id="node22" href="$classc2__plugin__function__p.html" title="{c2_plugin_function\l_p\&lt; G4double \&gt;\n|# func\l|+ c2_plugin_function_p()\l+ c2_plugin_function_p()\l+ set_function()\l+ value_with_derivatives()\l+ ~c2_plugin_function_p()\l+ unset_function()\l+ get_sampling_grid()\l}" alt="" coords="2169,1591,2344,1771"/>
<area shape="rect" id="node21" href="$classc2__const__plugin__function__p.html" title="{c2_const_plugin_function\l_p\&lt; G4double \&gt;\n||+ c2_const_plugin_function_p()\l+ c2_const_plugin_function_p()\l+ set_function()\l+ ~c2_const_plugin_function_p()\l+ get()\l}" alt="" coords="2281,1833,2491,1984"/>
<area shape="rect" id="node28" href="$classc2__cos__p.html" title="compute cos(x) with its derivatives.The factory function c2_factory::cos() creates *new c2_cos_p ..." alt="" coords="3795,1635,3969,1727"/>
<area shape="rect" id="node32" href="$classaccumulated__histogram.html" title="An interpolating_function_p which is the cumulative integral of a histogram.Note than binedges should..." alt="" coords="4800,1635,4980,1727"/>
<area shape="rect" id="node33" href="$classarrhenius__interpolating__function__p.html" title="A spline with X in reciprocal space and Y transformed in log space.Most useful for thermodynamic type..." alt="" coords="4021,1620,4191,1741"/>
<area shape="rect" id="node34" href="$classlin__log__interpolating__function__p.html" title="A spline with Y transformed into log space.Most useful for functions looking like y=exp(x) ..." alt="" coords="4215,1620,4386,1741"/>
<area shape="rect" id="node35" href="$classlog__lin__interpolating__function__p.html" title="A spline with X transformed into log space.Most useful for functions looking like y=log(x) or any oth..." alt="" coords="4410,1620,4581,1741"/>
<area shape="rect" id="node36" href="$classlog__log__interpolating__function__p.html" title="A spline with X and Y transformed into log space.Most useful for functions looking like y=x^n or any ..." alt="" coords="4605,1620,4775,1741"/>
</map>
